{"version":3,"sources":["webpack:///./src/components/game-objects/Board.ts","webpack:///./src/components/utilities.ts","webpack:///./src/components/message.vue?d478","webpack:///./src/components/message.vue?e9d9","webpack:///./src/components/message.vue?03fc","webpack:///./src/components/message.vue","webpack:///./src/components/enums.ts","webpack:///./src/components/general-objects/Canvas.ts","webpack:///./src/components/mixins/Game.ts","webpack:///./src/components/game-objects/Player.ts","webpack:///./src/views/TicTacToeGame.vue?a5ac","webpack:///./src/views/TicTacToeGame.vue?c1b9","webpack:///./src/views/TicTacToeGame.vue?c95f","webpack:///./src/views/TicTacToeGame.vue","webpack:///./src/components/game-objects/Score.ts","webpack:///./src/components/scores.vue?b734","webpack:///./src/components/scores.vue?e458","webpack:///./src/components/scores.vue?6e91","webpack:///./src/components/scores.vue"],"names":["Board","context","width","height","this","fillStyle","fillRect","Utilities","numerator","denominator","min","max","Math","floor","random","x1","x2","y1","y2","sqrt","pow","matrix","push","Array","fill","event","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","url","Promise","resolve","reject","image","Image","onload","onerror","src","loadImage","then","drawImage","catch","error","console","circle","getRadius","getWidth","getHeight","firstRect","secondRect","derivedCtor","baseCtors","forEach","baseCtor","Object","getOwnPropertyNames","prototype","name","render","_vm","_h","$createElement","_c","_self","staticClass","class","styleState","_v","_s","message","staticRenderFns","style","state","component","Directions","State","Control","BoardPong","BoardTanks","BoardArkanoid","BoardSnake","BoardTicTacToe","BoardTetris","Players","VelocityPaddle","Canvas","canvas","ctx","getContext","setAttribute","focus","callback","addEventListener","removeEventListener","globalState","START","isInitCanvas","styleOfMessage","$refs","game","save","setTransform","clearRect","restore","OVER","isOver","Player","lives","score","abs","increase","decrease","reset","getScore","getPreviousScore","getBest","attrs","on","$event","setOpponent","getScores","ref","getMessage","getStyleOfMessage","_e","restart","Game","super","currentPlayer","FIRST","players","SECOND","AI","winFirstPlayer","winSecondPlayer","grid","sizeGrid","currentOpponent","scores","firstPlayer","secondPlayer","aiPlayer","cell","size","_initInstance","_reset","_playWithHuman","_playWithAI","opponent","run","value","getFirstPlayerScore","getSecondPlayerScore","getAiScore","clickListener","_move","PLAY","timerId","setInterval","clearInterval","_resetMessage","board","draw","_resetGrid","_drawGrid","_initCanvas","WIDTH","HEIGHT","_generateCurrentPlayer","_initGrid","randomIndex","randomIntByInterval","i","widthBoarder","lineWidth","round","beginPath","strokeStyle","strokeRect","closePath","sumRow","sumColumn","mainDiagonal","sideDiagonal","numberNotZeros","j","_gameOver","winner","addScore","_setMessage","step","moveTo","lineTo","stroke","radius","arc","PI","player","indexCellX","div","indexCellY","posXSymbol","posYSymbol","_drawCircle","_setCurrentPlayer","_drawCross","_checkState","components","Message","Scores","Score","previousScore","best","_updatePreviousScore","_updateBest","_l","index","key","colors","default"],"mappings":"kHAEA,kCAAe,MAAMA,EAKnB,YAAYC,EAAcC,EAAeC,GAHjC,KAAAD,MAAgB,EAChB,KAAAC,OAAiB,EAGvBC,KAAKH,QAAUA,EACfG,KAAKF,MAAQA,EACbE,KAAKD,OAASA,EAGT,OACLC,KAAKH,QAAQI,UAAY,UACzBD,KAAKH,QAAQK,SAAS,EAAG,EAAGF,KAAKF,MAAOE,KAAKD,W,oCCVjD,kCAAe,MAAMI,EACZ,WAAWC,EAAmBC,GACnC,OAAQD,EAAYA,EAAYC,GAAeA,EAG1C,2BAA2BC,EAAaC,GAC7C,OAAOC,KAAKC,MAAMH,EAAME,KAAKE,UAAYH,EAAM,EAAID,IAG9C,mBAAmBK,EAAYC,EAAYC,EAAYC,GAC5D,OAAON,KAAKO,KAAKP,KAAKQ,IAAKJ,EAAKD,EAAK,GAAKH,KAAKQ,IAAKF,EAAKD,EAAK,IAGzD,oBAAoBf,EAAeC,GACxC,MAAMkB,EAAqB,GAC3B,MAAOlB,IACLkB,EAAOC,KAAK,IAAIC,MAAMrB,GAAOsB,KAAK,IAEpC,OAAOH,EAGF,2BAA2BI,GAChC,MAAMC,EAAOD,EAAME,QAAUF,EAAME,OAAOC,wBACpCC,EAAYJ,EAAMK,QAAUJ,EAAKK,KACjCC,EAAYP,EAAMQ,QAAUP,EAAKQ,IACvC,MAAO,CAACL,IAAGG,KAGN,iBAAiBG,GACtB,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAQ,IAAIC,MAClBD,EAAME,OAAS,KACbJ,EAAQE,IAEVA,EAAMG,QAAUJ,EAChBC,EAAMI,IAAMR,IAIT,yBAAyBlC,EAAc4B,EAAWG,EAAW9B,EAAeC,GACjFC,KAAKwC,UAAU,cACdC,KAAMN,IACLtC,EAAQ6C,UAAUP,EAAOV,EAAGG,EAAG9B,EAAOC,KAEvC4C,MAAOC,IACNC,QAAQD,MAAM,4DAA6DA,KAIxE,kCAAkCtB,EAAYwB,GACnD,OAAKxB,EAAKG,EAAIqB,EAAOrB,EAAIqB,EAAOC,WAC3BzB,EAAKG,EAAIH,EAAK0B,SAAWF,EAAOrB,EAAIqB,EAAOC,WAC3CzB,EAAKM,EAAIkB,EAAOlB,EAAIkB,EAAOC,WAC3BzB,EAAKM,EAAIN,EAAK2B,UAAYH,EAAOlB,EAAIkB,EAAOC,UAM5C,gCAAgCG,EAAkBC,GACvD,OAAKD,EAAUzB,EAAI0B,EAAW1B,EAAI0B,EAAWH,UACxCE,EAAUzB,EAAIyB,EAAUF,SAAWG,EAAW1B,GAC9CyB,EAAUtB,EAAIuB,EAAWvB,EAAIuB,EAAWF,WACxCC,EAAUtB,EAAIsB,EAAUD,UAAYE,EAAWvB,EAM/C,mBAAmBwB,EAAkBC,GAC1CA,EAAUC,QAASC,IACjBC,OAAOC,oBAAoBF,EAASG,WAAWJ,QAASK,IACtDP,EAAYM,UAAUC,GAAQJ,EAASG,UAAUC,U,oCC7EzD,IAAIC,EAAS,WAAa,IAAIC,EAAI7D,KAAS8D,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,IAAI,CAACG,MAAM,CAAC,aAAcN,EAAIO,aAAa,CAACP,EAAIQ,GAAGR,EAAIS,GAAGT,EAAIU,eAC/LC,EAAkB,G,wBCStB,IAAqB,EAArB,cAAqC,OAInC,iBACE,IAAIC,EAAQ,mBASZ,OARIzE,KAAK0E,QACY,UAAf1E,KAAK0E,QACPD,EAAQ,kBAES,SAAfzE,KAAK0E,QACPD,EAAQ,kBAGLA,IAbD,gBAAP,kB,8BACO,gBAAP,kB,4BAFkB,EAAO,gBAD3B,QACoB,WCVgU,I,YCOjVE,EAAY,eACd,EACAf,EACAY,GACA,EACA,KACA,KACA,MAIa,OAAAG,E,6CClBf,IAAkBC,EAOAC,EAMAC,EAOAC,EAKAC,EAMAC,EAKAC,EAKAC,EAKAC,EAMAC,EAMAC,EA1DlB,+XAAkBV,GAChB,uBACA,yBACA,mBACA,uBAJF,CAAkBA,MAAU,KAO5B,SAAkBC,GAChB,wBACA,sBACA,sBAHF,CAAkBA,MAAK,KAMvB,SAAkBC,GAChB,6BACA,iBACA,iBACA,yBAJF,CAAkBA,MAAO,KAOzB,SAAkBC,GAChB,0BACA,4BAFF,CAAkBA,MAAS,KAK3B,SAAkBC,GAChB,0BACA,4BACA,iDAHF,CAAkBA,MAAU,KAM5B,SAAkBC,GAChB,0BACA,4BAFF,CAAkBA,MAAa,KAK/B,SAAkBC,GAChB,0BACA,4BAFF,CAAkBA,MAAU,KAK5B,SAAkBC,GAChB,0BACA,4BAFF,CAAkBA,MAAc,KAKhC,SAAkBC,GAChB,0BACA,4BACA,iDAHF,CAAkBA,MAAW,KAM7B,SAAkBC,GAChB,wBACA,0BACA,kBAHF,CAAkBA,MAAO,KAMzB,SAAkBC,GAChB,sBACA,2BACA,uBAHF,CAAkBA,MAAc,M,4EC1DjB,MAAMC,EAInB,YAAYC,EAAa1F,EAAeC,GACtCC,KAAKwF,OAASA,EACdxF,KAAKyF,IAAMzF,KAAKwF,OAAOE,WAAW,MAClC1F,KAAKwF,OAAO1F,MAAQA,EACpBE,KAAKwF,OAAOzF,OAASA,EACrBC,KAAKwF,OAAOG,aAAa,WAAY,KACrC3F,KAAKwF,OAAOI,QAGP,iBAAiBvE,EAAewE,GACrC7F,KAAKwF,OAAOM,iBAAiBzE,EAAOwE,GAG/B,oBAAoBxE,EAAewE,GACxC7F,KAAKwF,OAAOO,oBAAoB1E,EAAOwE,GAGzC,cACE,OAAO7F,KAAKyF,KCjBhB,IAAqB,EAArB,cAAkC,OAAlC,c,oBACY,KAAAD,OAAc,KAEd,KAAA1F,MAAQ,EACR,KAAAC,OAAS,EACT,KAAAiG,YAAqB,OAAMC,MAC3B,KAAAC,cAAe,EAEf,KAAA3B,QAAkB,GAClB,KAAA4B,eAAyB,GAEzB,YAAYrG,EAAeC,GACnC,QAAKC,KAAKoG,MAAMC,OAGhBrG,KAAKF,MAAQA,EACbE,KAAKD,OAASA,EACdC,KAAKwF,OAAS,IAAID,EAAOvF,KAAKoG,MAAMC,KAAMvG,EAAOC,GACjDC,KAAKH,QAAUG,KAAKwF,OAAO3F,QAC3BG,KAAKkG,cAAe,GACb,GAGC,eACJlG,KAAKkG,eACPlG,KAAKH,QAAQyG,OACbtG,KAAKH,QAAQ0G,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GACzCvG,KAAKH,QAAQ2G,UAAU,EAAG,EAAGxG,KAAKF,MAAOE,KAAKD,QAC9CC,KAAKH,QAAQ4G,WAIjB,aACE,OAAOzG,KAAKgG,cAAgB,OAAMU,KAGpC,iBACE,OAAO1G,KAAKuE,QAGd,wBACE,OAAOvE,KAAKmG,eAGd,gBACE,OAAOnG,KAAK2G,QAA2B,KAAjB3G,KAAKuE,QAGnB,gBACRvE,KAAKuE,QAAU,GACfvE,KAAKmG,eAAiB,GAGd,YAAY5B,EAAiB4B,GACrCnG,KAAKuE,QAAUA,EACfvE,KAAKmG,eAAiBA,IAvDL,EAAI,gBADxB,QACoB,a,oCCLrB,kDAEe,MAAMS,EAKnB,YAAYjD,EAAe,eAAgBkD,EAAgB,GAJnD,KAAAlD,KAAe,GAEf,KAAAkD,MAAgB,EAGtB7G,KAAK8G,MAAQ,IAAI,OACjB9G,KAAK2D,KAAOA,EACZ3D,KAAK6G,MAAQA,EAGR,QAAQA,GACb7G,KAAK6G,OAASA,EAGT,aAAaA,GACdA,EAAQ,IACVA,EAAQrG,KAAKuG,IAAIF,IAEf7G,KAAK6G,MAAQA,EAAQ,IAGzB7G,KAAK6G,OAASA,GAGT,SAASC,GACd9G,KAAK8G,MAAME,SAASF,GAGf,cAAcA,GACnB9G,KAAK8G,MAAMG,SAASH,GAGf,cACL9G,KAAK8G,MAAMI,QAGb,eACE,OAAOlH,KAAK6G,MAGd,cACE,OAAO7G,KAAK2D,KAGd,eACE,OAAO3D,KAAK8G,MAAMK,SAGpB,uBACE,OAAOnH,KAAK8G,MAAMM,iBAGpB,cACE,OAAOpH,KAAK8G,MAAMO,W,2CCxDtB,IAAIzD,EAAS,WAAa,IAAIC,EAAI7D,KAAS8D,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,SAAS,CAACE,YAAY,wCAAwCoD,MAAM,CAAC,KAAO,UAAUC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO3D,EAAI4D,YAAY,SAAS,CAAC5D,EAAIQ,GAAG,kBAAkBL,EAAG,SAAS,CAACE,YAAY,wCAAwCoD,MAAM,CAAC,KAAO,UAAUC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO3D,EAAI4D,YAAY,UAAU,CAAC5D,EAAIQ,GAAG,oBAAoBL,EAAG,SAAS,CAACsD,MAAM,CAAC,OAASzD,EAAI6D,aAAa1D,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,SAAS,CAAC2D,IAAI,SAAU9D,EAAa,UAAEG,EAAG,UAAU,CAACsD,MAAM,CAAC,QAAUzD,EAAI+D,WAAW,MAAQ/D,EAAIgE,qBAAqBhE,EAAIiE,KAAK9D,EAAG,SAAS,CAACE,YAAY,mCAAmCoD,MAAM,CAAC,KAAO,UAAUC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO3D,EAAIkE,aAAa,CAAClE,EAAIQ,GAAG,cAAc,IAAI,IACh4BG,EAAkB,G,iICgCtB,IAAqB,EAArB,cAA2C,oBAAOwD,EAAA,OAchD,cACEC,QAdM,KAAAC,cAAyB,OAAQC,MACjC,KAAAC,QAAqB,CAAC,OAAQD,MAAO,OAAQE,OAAQ,OAAQC,IAC7D,KAAAC,eAAyB,EACzB,KAAAC,gBAA0B,EAI1B,KAAAC,KAAmB,CAAC,GAAI,GAAI,IAC5B,KAAAC,SAAmB,EAEnB,KAAAC,gBAA0B,GAC1B,KAAAC,OAAmB,GAIzB5I,KAAK6I,YAAc,IAAIjC,EAAA,KACvB5G,KAAK8I,aAAe,IAAIlC,EAAA,KACxB5G,KAAK+I,SAAW,IAAInC,EAAA,KACpB5G,KAAKgJ,KAAO,CAACC,KAAM,GAGd,MACDjJ,KAAKkJ,gBAKJ,UAEL,GADAlJ,KAAKmJ,SACwB,QAAzBnJ,KAAK2I,gBACP3I,KAAKoJ,qBACA,IAA6B,OAAzBpJ,KAAK2I,gBAGd,OAFA3I,KAAKqJ,eAMF,YAAYC,GACjBtJ,KAAK2I,gBAAkBW,EAGlB,UACLtJ,KAAKuJ,MAGP,gBAeE,OAdAvJ,KAAK4I,OAAS,CACZ,CACErE,QAAS,eACTiF,MAAOxJ,KAAKyJ,qBAEd,CACElF,QAAS,gBACTiF,MAAOxJ,KAAK0J,sBAEd,CACEnF,QAAS,KACTiF,MAAOxJ,KAAK2J,aAGT3J,KAAK4I,OAGd,0BACE,OAAO5I,KAAK6I,YAAY1B,SAG1B,2BACE,OAAOnH,KAAK8I,aAAa3B,SAG3B,iBACE,OAAOnH,KAAK+I,SAAS5B,SAIf,OAAOqC,GACbxJ,KAAK+H,UAGC,eAIA,iBACN,MAAM6B,EAAiBvI,GAAerB,KAAK6J,MAAMxI,GACjDrB,KAAKwF,OAAOM,iBAAiB,QAAS8D,GAEtC5J,KAAKgG,YAAc,OAAM8D,KAEzB,MAAMC,EAAUC,YAAY,KAC1B,GAAIhK,KAAKgG,cAAgB,OAAMU,KAG7B,OAFA1G,KAAKwF,OAAOO,oBAAoB,QAAS6D,QACzCK,cAAcF,IAGf,KAGG,SACN/J,KAAKgG,YAAc,OAAMU,KACzB1G,KAAKkK,gBACLlK,KAAKmK,MAAMC,OACXpK,KAAKqK,aACLrK,KAAKsK,YAGC,gBACN,QAA0B,IAAtBtK,KAAKkG,eAC+D,IAAlElG,KAAKuK,YAAY,OAAeC,MAAO,OAAeC,WAK5DzK,KAAK0I,SAAW,EAChB1I,KAAK0K,yBAEL1K,KAAKmK,MAAQ,IAAIvK,EAAA,KAAMI,KAAKH,QAASG,KAAKF,MAAOE,KAAKD,QACtDC,KAAKmK,MAAMC,OAEXpK,KAAK2K,YACL3K,KAAKsK,aAEE,GAGD,yBACN,MAAMM,EAAc,OAAUC,oBAAoB,EAAG,GACrD7K,KAAKkI,cAAgBlI,KAAKoI,QAAQwC,GAC9B5K,KAAKkI,gBAAkB,OAAQC,QACjCnI,KAAKuI,eAAiBvI,KAAK0I,SAC3B1I,KAAKwI,iBAAmBxI,KAAK0I,UAE3B1I,KAAKkI,gBAAkB,OAAQG,SACjCrI,KAAKwI,gBAAkBxI,KAAK0I,SAC5B1I,KAAKuI,gBAAkBvI,KAAK0I,UAIxB,aACN,IAAK,IAAIoC,EAAI,EAAGA,EAAI9K,KAAK0I,SAAUoC,IACjC9K,KAAKyI,KAAKqC,GAAG1J,KAAK,GAId,YACN,IAAK,IAAI0J,EAAI,EAAGA,EAAI9K,KAAK0I,SAAUoC,IACjC9K,KAAKyI,KAAKqC,GAAK,IAAI3J,MAAcnB,KAAK0I,UAAUtH,KAAK,GAIjD,YACN,MAAM2J,EAAe/K,KAAKH,QAAQmL,UAAY,EAC9ChL,KAAKgJ,KAAO,CACVC,KAAMzI,KAAKyK,OAAOzK,KAAKF,IAAIN,KAAKF,MAAOE,KAAKD,QACD,EAAhBC,KAAK0I,SAAeqC,GACpB/K,KAAK0I,SAAW,EAAIqC,IAEjD,IAAK,IAAItJ,EAAI,EAAGA,EAAIzB,KAAK0I,SAAUjH,IACjC,IAAK,IAAIG,EAAI,EAAGA,EAAI5B,KAAK0I,SAAU9G,IACjC5B,KAAKH,QAAQqL,YACblL,KAAKH,QAAQsL,YAAc,UAC3BnL,KAAKH,QAAQuL,WAAWpL,KAAKgJ,KAAKC,KAAOxH,EAAGzB,KAAKgJ,KAAKC,KAAOrH,EAAG5B,KAAKgJ,KAAKC,KAAMjJ,KAAKgJ,KAAKC,MAC1FjJ,KAAKH,QAAQwL,YAKX,cACN,IAAIC,EAAS,EACTC,EAAY,EACZC,EAAe,EACfC,EAAe,EACnB,MAAMlD,EAAiBvI,KAAKuI,eACtBC,EAAkBxI,KAAKwI,gBAC7B,IAAIkD,EAAiB,EAErB,IAAK,IAAIZ,EAAI,EAAGA,EAAI9K,KAAK0I,SAAUoC,IACjC,IAAK,IAAIa,EAAI,EAAGA,EAAI3L,KAAK0I,SAAUiD,IACT,IAApB3L,KAAKyI,KAAKqC,GAAGa,IACfD,IAKFA,IAAmB1L,KAAK0I,SAAW1I,KAAK0I,UAC1C1I,KAAK4L,UAAU,QAGjB,IAAK,IAAInK,EAAI,EAAGA,EAAIzB,KAAK0I,SAAUjH,IAAK,CACtC,IAAK,IAAIG,EAAI,EAAGA,EAAI5B,KAAK0I,SAAU9G,IACjC0J,GAAUtL,KAAKyI,KAAKhH,GAAGG,GACvB2J,GAAavL,KAAKyI,KAAK7G,GAAGH,GACtB6J,IAAW/C,GAAkBgD,IAAchD,GAC7CvI,KAAK4L,UAAU,SAEbN,IAAW9C,GAAmB+C,IAAc/C,GAC9CxI,KAAK4L,UAAU,UAGnBN,EAAS,EACTC,EAAY,EAGd,IAAK,IAAI9J,EAAI,EAAGA,EAAIzB,KAAK0I,SAAUjH,IACjC+J,GAAgBxL,KAAKyI,KAAKhH,GAAGA,GACzB+J,IAAiBjD,GACnBvI,KAAK4L,UAAU,SAEbJ,IAAiBhD,GACnBxI,KAAK4L,UAAU,UAInB,IAAK,IAAInK,EAAI,EAAGA,EAAIzB,KAAK0I,SAAUjH,IACjCgK,GAAgBzL,KAAKyI,KAAKhH,GAAGzB,KAAK0I,SAAW,EAAIjH,GAC7CgK,IAAiBlD,GACnBvI,KAAK4L,UAAU,SAEbH,IAAiBjD,GACnBxI,KAAK4L,UAAU,UAKb,UAAUC,GAEhB,OADA7L,KAAKgG,YAAc,OAAMU,KACjBmF,GACN,IAAK,QACH7L,KAAK6I,YAAYiD,SAAS,GAC1B9L,KAAK+L,YAAY,uBAAwB,QACzC,MACF,IAAK,SACH/L,KAAK8I,aAAagD,SAAS,GAC3B9L,KAAK+L,YAAY,wBAAyB,QAC1C,MACF,IAAK,OACH/L,KAAK+L,YAAY,mBAAoB,QACrC,MACF,QACE/L,KAAK+L,YAAY,uBAAwB,UAIvC,WAAWtK,EAAWG,GAC5B5B,KAAKH,QAAQqL,YACblL,KAAKH,QAAQsL,YAAc,UAC3B,MAAMa,EAAOhM,KAAKgJ,KAAKC,KAAO,EAC9BjJ,KAAKH,QAAQoM,OAAOxK,EAAIuK,EAAMpK,EAAIoK,GAClChM,KAAKH,QAAQqM,OAAOzK,EAAIuK,EAAMpK,EAAIoK,GAClChM,KAAKH,QAAQoM,OAAOxK,EAAIuK,EAAMpK,EAAIoK,GAClChM,KAAKH,QAAQqM,OAAOzK,EAAIuK,EAAMpK,EAAIoK,GAClChM,KAAKH,QAAQsM,SACbnM,KAAKH,QAAQwL,YAGP,YAAY5J,EAAWG,GAC7B5B,KAAKH,QAAQqL,YACblL,KAAKH,QAAQsL,YAAc,UAC3B,MAAMiB,EAASpM,KAAKgJ,KAAKC,KAAO,EAChCjJ,KAAKH,QAAQwM,IAAI5K,EAAGG,EAAGwK,EAAQ,EAAG,EAAI5L,KAAK8L,IAC3CtM,KAAKH,QAAQsM,SACbnM,KAAKH,QAAQwL,YAGP,kBAAkBkB,GACxBvM,KAAKkI,cAAgBqE,EAGf,MAAMlL,GACZ,MAAMC,EAAOD,EAAME,OAAOC,wBACpBC,EAAIJ,EAAMK,QAAUJ,EAAKK,KACzBC,EAAIP,EAAMQ,QAAUP,EAAKQ,IACzB0K,EAAa,OAAUC,IAAIhL,EAAGzB,KAAKgJ,KAAKC,MACxCyD,EAAa,OAAUD,IAAI7K,EAAG5B,KAAKgJ,KAAKC,MAE9C,GAA0C,IAAtCjJ,KAAKyI,KAAKiE,GAAYF,GACxB,OAGF,MAAMG,EAAaH,EAAaxM,KAAKgJ,KAAKC,KAAOjJ,KAAKgJ,KAAKC,KAAO,EAC5D2D,EAAaF,EAAa1M,KAAKgJ,KAAKC,KAAOjJ,KAAKgJ,KAAKC,KAAO,EAE9DjJ,KAAKkI,gBAAkB,OAAQC,OACjCnI,KAAK6M,YAAYF,EAAYC,GAC7B5M,KAAK8M,kBAAkB,OAAQzE,QAC/BrI,KAAKyI,KAAKiE,GAAYF,GAAc,IAEpCxM,KAAK+M,WAAWJ,EAAYC,GAC5B5M,KAAK8M,kBAAkB,OAAQ3E,OAC/BnI,KAAKyI,KAAKiE,GAAYF,IAAe,GAGvCxM,KAAKgN,gBAzNP,gBADC,eAAM,oB,2BA7EY,EAAa,gBANjC,IAAU,CACTC,WAAY,CACVC,QAAA,OACAC,OAAA,WAGiB,WCjCsU,I,YCOvVxI,EAAY,eACd,EACAf,EACAY,GACA,EACA,KACA,KACA,MAIa,aAAAG,E,2CClBf,kCAAe,MAAMyI,EAKnB,cACEpN,KAAKqN,cAAgB,EACrBrN,KAAK8G,MAAQ,EACb9G,KAAKsN,KAAO,EAGP,SAASxG,GACdA,EAAQtG,KAAKuG,IAAID,GACjB9G,KAAK8G,OAASA,EACd9G,KAAKuN,uBACLvN,KAAKwN,cAGA,SAAS1G,GACVA,EAAQ,IACVA,EAAQtG,KAAKuG,IAAID,IAEf9G,KAAK8G,MAAQA,EAAQ,IAGzB9G,KAAK8G,OAASA,EACd9G,KAAKuN,wBAGA,QACLvN,KAAK8G,MAAQ,EAGf,eACE,OAAO9G,KAAK8G,MAGd,uBACE,OAAO9G,KAAKqN,cAGd,cACE,OAAOrN,KAAKsN,KAGN,uBACNtN,KAAKqN,cAAgBrN,KAAK8G,MAGpB,cACF9G,KAAK8G,MAAQ9G,KAAKsN,OACpBtN,KAAKsN,KAAOtN,KAAK8G,U,kCCnDvB,IAAIlD,EAAS,WAAa,IAAIC,EAAI7D,KAAS8D,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,UAAUL,EAAI4J,GAAI5J,EAAU,QAAE,SAASiD,EAAM4G,GAAO,OAAO1J,EAAG,IAAI,CAAC2J,IAAID,EAAMxJ,YAAY,YAAYC,MAAMN,EAAI+J,OAAOF,IAAQ,CAAC7J,EAAIQ,GAAG,SAASR,EAAIS,GAAGwC,EAAMvC,SAAS,MAAMV,EAAIS,GAAGwC,EAAM0C,OAAO,aAAY,IAC7ThF,EAAkB,G,wBCWtB,IAAqB,EAArB,cAAoC,OAApC,c,oBACmB,KAAAoJ,OAAmB,CAClC,wBACA,0BACA,8BAEqB,gBAAtB,eAAK,CAAEC,QAAS,M,6BANE,EAAM,gBAD1B,QACoB,WCZ+T,I,YCOhVlJ,EAAY,eACd,EACAf,EACAY,GACA,EACA,KACA,KACA,MAIa,OAAAG,E","file":"js/chunk-35c2422c.405b04f1.js","sourcesContent":["import { IDrawable } from '../interfaces';\r\n\r\nexport default class Board implements IDrawable {\r\n  private context: any;\r\n  private width: number = 0;\r\n  private height: number = 0;\r\n\r\n  constructor(context: any, width: number, height: number) {\r\n    this.context = context;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  public draw(): void {\r\n    this.context.fillStyle = '#ffffff';\r\n    this.context.fillRect(0, 0, this.width, this.height);\r\n  }\r\n}\r\n","import Rect from './general-objects/Rect';\r\nimport Circle from './general-objects/Circle';\r\nimport Canvas from './general-objects/Canvas';\r\nimport { IRect, IMouseCoordinates } from './interfaces';\r\n\r\nexport default class Utilities {\r\n  public static div(numerator: number, denominator: number): number {\r\n    return (numerator - numerator % denominator) / denominator;\r\n  }\r\n\r\n  public static randomIntByInterval(min: number, max: number): number {\r\n    return Math.floor(min + Math.random() * (max + 1 - min));\r\n  }\r\n\r\n  public static getDistance(x1: number, x2: number, y1: number, y2: number): number {\r\n    return Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2));\r\n  }\r\n\r\n  public static createMatrix(width: number, height: number): number[][] {\r\n    const matrix: number[][] = [];\r\n    while (height--) {\r\n      matrix.push(new Array(width).fill(0));\r\n    }\r\n    return matrix;\r\n  }\r\n\r\n  public static getMouseCoordinates(event: any): IMouseCoordinates {\r\n    const rect = event.target && event.target.getBoundingClientRect();\r\n    const x: number = event.clientX - rect.left;\r\n    const y: number = event.clientY - rect.top;\r\n    return {x, y};\r\n  }\r\n\r\n  public static loadImage(url: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      const image = new Image();\r\n      image.onload = () => {\r\n        resolve(image);\r\n      };\r\n      image.onerror = reject;\r\n      image.src = url;\r\n    });\r\n  }\r\n\r\n  public static drawImageOnCanvas(context: any, x: number, y: number, width: number, height: number): void {\r\n    this.loadImage('./tank.png')\r\n    .then((image: any) => {\r\n      context.drawImage(image, x, y, width, height);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error: in the method drawImageOnCanvas loading went wrong', error);\r\n    });\r\n  }\r\n\r\n  public static checkCollisionRectOfCircle(rect: Rect, circle: Circle): boolean {\r\n    if ((rect.x < circle.x + circle.getRadius) &&\r\n        (rect.x + rect.getWidth > circle.x - circle.getRadius) &&\r\n        (rect.y < circle.y + circle.getRadius) &&\r\n        (rect.y + rect.getHeight > circle.y - circle.getRadius)) {\r\n          return true;\r\n        }\r\n    return false;\r\n  }\r\n\r\n  public static checkCollisionRectOfRect(firstRect: IRect, secondRect: IRect): boolean {\r\n    if ((firstRect.x < secondRect.x + secondRect.getWidth) &&\r\n        (firstRect.x + firstRect.getWidth > secondRect.x) &&\r\n        (firstRect.y < secondRect.y + secondRect.getHeight) &&\r\n        (firstRect.y + firstRect.getHeight > secondRect.y)) {\r\n          return true;\r\n        }\r\n    return false;\r\n  }\r\n\r\n  public static applyMixins(derivedCtor: any, baseCtors: any[]) {\r\n    baseCtors.forEach((baseCtor) => {\r\n      Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\r\n        derivedCtor.prototype[name] = baseCtor.prototype[name];\r\n      });\r\n    });\r\n  }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"message\"},[_c('p',{class:['message__p', _vm.styleState]},[_vm._v(_vm._s(_vm.message))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\n@Component\r\nexport default class Message extends Vue {\r\n  @Prop() private message!: string;\r\n  @Prop() private state?: string;\r\n\r\n  get styleState(): string {\r\n    let style = 'message--primary';\r\n    if (this.state) {\r\n      if (this.state === 'error') {\r\n        style = 'message--error';\r\n      }\r\n      if (this.state === 'over') {\r\n        style = 'message--over';\r\n      }\r\n    }\r\n    return style;\r\n  }\r\n}\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./message.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./message.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./message.vue?vue&type=template&id=45fd6734&\"\nimport script from \"./message.vue?vue&type=script&lang=ts&\"\nexport * from \"./message.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export const enum Directions {\r\n  LEFT = 37,\r\n  RIGHT = 39,\r\n  UP = 38,\r\n  DOWN = 40,\r\n}\r\n\r\nexport const enum State {\r\n  START,\r\n  PLAY,\r\n  OVER,\r\n}\r\n\r\nexport const enum Control {\r\n  RESTART = 82,\r\n  Q = 81,\r\n  W = 87,\r\n  SPACE = 32,\r\n}\r\n\r\nexport const enum BoardPong {\r\n  WIDTH = 800,\r\n  HEIGHT = 400,\r\n}\r\n\r\nexport const enum BoardTanks {\r\n  WIDTH = 640,\r\n  HEIGHT = 640,\r\n  SCALE_COEFFICIENT = 20,\r\n}\r\n\r\nexport const enum BoardArkanoid {\r\n  WIDTH = 800,\r\n  HEIGHT = 720,\r\n}\r\n\r\nexport const enum BoardSnake {\r\n  WIDTH = 800,\r\n  HEIGHT = 600,\r\n}\r\n\r\nexport const enum BoardTicTacToe {\r\n  WIDTH = 450,\r\n  HEIGHT = 450,\r\n}\r\n\r\nexport const enum BoardTetris {\r\n  WIDTH = 320,\r\n  HEIGHT = 540,\r\n  SCALE_COEFFICIENT = 20,\r\n}\r\n\r\nexport const enum Players {\r\n  FIRST,\r\n  SECOND,\r\n  AI,\r\n}\r\n\r\nexport const enum VelocityPaddle {\r\n  SLOW = 8,\r\n  MIDDLE = 14,\r\n  FAST = 20,\r\n}\r\n","export default class Canvas {\r\n  private canvas: any;\r\n  private ctx: any;\r\n\r\n  constructor(canvas: any, width: number, height: number) {\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.canvas.width = width;\r\n    this.canvas.height = height;\r\n    this.canvas.setAttribute('tabindex', '1');\r\n    this.canvas.focus();\r\n  }\r\n\r\n  public addEventListener(event: string, callback: any): void {\r\n    this.canvas.addEventListener(event, callback);\r\n  }\r\n\r\n  public removeEventListener(event: string, callback: any): void {\r\n    this.canvas.removeEventListener(event, callback);\r\n  }\r\n\r\n  get context(): any {\r\n    return this.ctx;\r\n  }\r\n}\r\n","import { Vue, Component } from 'vue-property-decorator';\r\nimport { State } from '../enums';\r\nimport Canvas from '../general-objects/Canvas';\r\n\r\n@Component\r\nexport default class Game extends Vue {\r\n  protected canvas: any = null;\r\n  protected context: any;\r\n  protected width = 0;\r\n  protected height = 0;\r\n  protected globalState: State = State.START;\r\n  protected isInitCanvas = false;\r\n  protected board: any;\r\n  protected message: string = '';\r\n  protected styleOfMessage: string = '';\r\n\r\n  protected _initCanvas(width: number, height: number): boolean {\r\n    if (!this.$refs.game) {\r\n      return false;\r\n    }\r\n    this.width = width;\r\n    this.height = height;\r\n    this.canvas = new Canvas(this.$refs.game, width, height);\r\n    this.context = this.canvas.context;\r\n    this.isInitCanvas = true;\r\n    return true;\r\n  }\r\n\r\n  protected clearContext(): void {\r\n    if (this.isInitCanvas) {\r\n      this.context.save();\r\n      this.context.setTransform(1, 0, 0, 1, 0, 0);\r\n      this.context.clearRect(0, 0, this.width, this.height);\r\n      this.context.restore();\r\n    }\r\n  }\r\n\r\n  protected get isOver(): boolean {\r\n    return this.globalState === State.OVER;\r\n  }\r\n\r\n  protected get getMessage(): string {\r\n    return this.message;\r\n  }\r\n\r\n  protected get getStyleOfMessage(): string {\r\n    return this.styleOfMessage;\r\n  }\r\n\r\n  protected get isMessage(): boolean {\r\n    return this.isOver && this.message !== '';\r\n  }\r\n\r\n  protected _resetMessage(): void {\r\n    this.message = '';\r\n    this.styleOfMessage = '';\r\n  }\r\n\r\n  protected _setMessage(message: string, styleOfMessage: string): void {\r\n    this.message = message;\r\n    this.styleOfMessage = styleOfMessage;\r\n  }\r\n}\r\n","import Score from './Score';\r\n\r\nexport default class Player {\r\n  private name: string = '';\r\n  private score: Score;\r\n  private lives: number = 0;\r\n\r\n  constructor(name: string = 'default name', lives: number = 3) {\r\n    this.score = new Score();\r\n    this.name = name;\r\n    this.lives = lives;\r\n  }\r\n\r\n  public addLive(lives: number): void {\r\n    this.lives += lives;\r\n  }\r\n\r\n  public subtractLive(lives: number): void {\r\n    if (lives < 0) {\r\n      lives = Math.abs(lives);\r\n    }\r\n    if (this.lives - lives < 0) {\r\n      return;\r\n    }\r\n    this.lives -= lives;\r\n  }\r\n\r\n  public addScore(score: number): void {\r\n    this.score.increase(score);\r\n  }\r\n\r\n  public subtractScore(score: number): void {\r\n    this.score.decrease(score);\r\n  }\r\n\r\n  public scoreToZero(): void {\r\n    this.score.reset();\r\n  }\r\n\r\n  get getLives(): number {\r\n    return this.lives;\r\n  }\r\n\r\n  get getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  get getScore(): number {\r\n    return this.score.getScore;\r\n  }\r\n\r\n  get getPreviousScore(): number {\r\n    return this.score.getPreviousScore;\r\n  }\r\n\r\n  get getBest(): number {\r\n    return this.score.getBest;\r\n  }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tictactoe\"},[_c('div',{staticClass:\"modes\"},[_c('button',{staticClass:\"btn-outline btn-outline--play-with-ai\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.setOpponent('AI')}}},[_vm._v(\"Play with AI\")]),_c('button',{staticClass:\"btn-outline btn-outline--game-for-two\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.setOpponent('Two')}}},[_vm._v(\"Game for two\")])]),_c('Scores',{attrs:{\"scores\":_vm.getScores}}),_c('div',{staticClass:\"tictactoe__game\"},[_c('canvas',{ref:\"game\"}),(_vm.isMessage)?_c('Message',{attrs:{\"message\":_vm.getMessage,\"state\":_vm.getStyleOfMessage}}):_vm._e(),_c('button',{staticClass:\"btn-outline btn-outline--restart\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.restart()}}},[_vm._v(\"Restart\")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Component, { mixins } from 'vue-class-component';\r\nimport { Watch } from 'vue-property-decorator';\r\nimport Utilities from '@/components/utilities';\r\nimport { IStaticGame } from '@/components/interfaces';\r\nimport { BoardTicTacToe, State, Players } from '@/components/enums';\r\nimport Board from '@/components/game-objects/Board';\r\nimport Player from '@/components/game-objects/Player';\r\nimport Message from '@/components/message.vue';\r\nimport Scores from '@/components/scores.vue';\r\nimport Game from '@/components/mixins/Game';\r\n\r\n@Component({\r\n  components: {\r\n    Message,\r\n    Scores,\r\n  },\r\n})\r\nexport default class TicTacToeGame extends mixins(Game) implements IStaticGame {\r\n  private currentPlayer: Players = Players.FIRST;\r\n  private players: Players[] = [Players.FIRST, Players.SECOND, Players.AI];\r\n  private winFirstPlayer: number = 0;\r\n  private winSecondPlayer: number = 0;\r\n  private firstPlayer: Player;\r\n  private secondPlayer: Player;\r\n  private aiPlayer: Player;\r\n  private grid: number[][] = [[], [], []];\r\n  private sizeGrid: number = 0;\r\n  private cell: {size: number};\r\n  private currentOpponent: string = '';\r\n  private scores: object[] = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.firstPlayer = new Player();\r\n    this.secondPlayer = new Player();\r\n    this.aiPlayer = new Player();\r\n    this.cell = {size: 0};\r\n  }\r\n\r\n  public run(): void {\r\n    if (this._initInstance() === false) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  public restart(): void {\r\n    this._reset();\r\n    if (this.currentOpponent === 'Two') {\r\n      this._playWithHuman();\r\n    } else if (this.currentOpponent === 'AI') {\r\n      this._playWithAI();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  public setOpponent(opponent: string): void {\r\n    this.currentOpponent = opponent;\r\n  }\r\n\r\n  public mounted() {\r\n    this.run();\r\n  }\r\n\r\n  get getScores(): object[] {\r\n    this.scores = [\r\n      {\r\n        message: 'First player',\r\n        value: this.getFirstPlayerScore,\r\n      },\r\n      {\r\n        message: 'Second player',\r\n        value: this.getSecondPlayerScore,\r\n      },\r\n      {\r\n        message: 'AI',\r\n        value: this.getAiScore,\r\n      },\r\n    ];\r\n    return this.scores;\r\n  }\r\n\r\n  get getFirstPlayerScore(): number {\r\n    return this.firstPlayer.getScore;\r\n  }\r\n\r\n  get getSecondPlayerScore(): number {\r\n    return this.secondPlayer.getScore;\r\n  }\r\n\r\n  get getAiScore(): number {\r\n    return this.aiPlayer.getScore;\r\n  }\r\n\r\n  @Watch('currentOpponent')\r\n  private _rerun(value: string): void {\r\n    this.restart();\r\n  }\r\n\r\n  private _playWithAI(): void {\r\n    // TODO\r\n  }\r\n\r\n  private _playWithHuman(): void {\r\n    const clickListener = (event: any) => this._move(event);\r\n    this.canvas.addEventListener('click', clickListener);\r\n\r\n    this.globalState = State.PLAY;\r\n\r\n    const timerId = setInterval(() => {\r\n      if (this.globalState === State.OVER) {\r\n        this.canvas.removeEventListener('click', clickListener);\r\n        clearInterval(timerId);\r\n        return;\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  private _reset(): void {\r\n    this.globalState = State.OVER;\r\n    this._resetMessage();\r\n    this.board.draw();\r\n    this._resetGrid();\r\n    this._drawGrid();\r\n  }\r\n\r\n  private _initInstance(): boolean {\r\n    if (this.isInitCanvas === false) {\r\n      if (this._initCanvas(BoardTicTacToe.WIDTH, BoardTicTacToe.HEIGHT) === false) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    this.sizeGrid = 3;\r\n    this._generateCurrentPlayer();\r\n\r\n    this.board = new Board(this.context, this.width, this.height);\r\n    this.board.draw();\r\n\r\n    this._initGrid();\r\n    this._drawGrid();\r\n\r\n    return true;\r\n  }\r\n\r\n  private _generateCurrentPlayer(): void {\r\n    const randomIndex = Utilities.randomIntByInterval(0, 1);\r\n    this.currentPlayer = this.players[randomIndex];\r\n    if (this.currentPlayer === Players.FIRST) {\r\n      this.winFirstPlayer = this.sizeGrid;\r\n      this.winSecondPlayer = -this.sizeGrid;\r\n    }\r\n    if (this.currentPlayer === Players.SECOND) {\r\n      this.winSecondPlayer = this.sizeGrid;\r\n      this.winFirstPlayer = -this.sizeGrid;\r\n    }\r\n  }\r\n\r\n  private _resetGrid(): void {\r\n    for (let i = 0; i < this.sizeGrid; i++) {\r\n      this.grid[i].fill(0);\r\n    }\r\n  }\r\n\r\n  private _initGrid(): void {\r\n    for (let i = 0; i < this.sizeGrid; i++) {\r\n      this.grid[i] = new Array<number>(this.sizeGrid).fill(0);\r\n    }\r\n  }\r\n\r\n  private _drawGrid(): void {\r\n    const widthBoarder = this.context.lineWidth = 5;\r\n    this.cell = {\r\n      size: Math.round((Math.min(this.width, this.height) -\r\n                                (this.sizeGrid * 2 * widthBoarder)) /\r\n                                 this.sizeGrid + 2 * widthBoarder),\r\n    };\r\n    for (let x = 0; x < this.sizeGrid; x++) {\r\n      for (let y = 0; y < this.sizeGrid; y++) {\r\n        this.context.beginPath();\r\n        this.context.strokeStyle = '#006E6D';\r\n        this.context.strokeRect(this.cell.size * x, this.cell.size * y, this.cell.size, this.cell.size);\r\n        this.context.closePath();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _checkState(): void {\r\n    let sumRow = 0;\r\n    let sumColumn = 0;\r\n    let mainDiagonal = 0;\r\n    let sideDiagonal = 0;\r\n    const winFirstPlayer = this.winFirstPlayer;\r\n    const winSecondPlayer = this.winSecondPlayer;\r\n    let numberNotZeros = 0;\r\n\r\n    for (let i = 0; i < this.sizeGrid; i++) {\r\n      for (let j = 0; j < this.sizeGrid; j++) {\r\n        if (this.grid[i][j] !== 0) {\r\n          numberNotZeros++;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (numberNotZeros === this.sizeGrid * this.sizeGrid) {\r\n      this._gameOver('draw');\r\n    }\r\n\r\n    for (let x = 0; x < this.sizeGrid; x++) {\r\n      for (let y = 0; y < this.sizeGrid; y++) {\r\n        sumRow += this.grid[x][y];\r\n        sumColumn += this.grid[y][x];\r\n        if (sumRow === winFirstPlayer || sumColumn === winFirstPlayer) {\r\n          this._gameOver('first');\r\n        }\r\n        if (sumRow === winSecondPlayer || sumColumn === winSecondPlayer) {\r\n          this._gameOver('second');\r\n        }\r\n      }\r\n      sumRow = 0;\r\n      sumColumn = 0;\r\n    }\r\n\r\n    for (let x = 0; x < this.sizeGrid; x++) {\r\n      mainDiagonal += this.grid[x][x];\r\n      if (mainDiagonal === winFirstPlayer) {\r\n        this._gameOver('first');\r\n      }\r\n      if (mainDiagonal === winSecondPlayer) {\r\n        this._gameOver('second');\r\n      }\r\n    }\r\n\r\n    for (let x = 0; x < this.sizeGrid; x++) {\r\n      sideDiagonal += this.grid[x][this.sizeGrid - 1 - x];\r\n      if (sideDiagonal === winFirstPlayer) {\r\n        this._gameOver('first');\r\n      }\r\n      if (sideDiagonal === winSecondPlayer) {\r\n        this._gameOver('second');\r\n      }\r\n    }\r\n  }\r\n\r\n  private _gameOver(winner: string): void {\r\n    this.globalState = State.OVER;\r\n    switch (winner) {\r\n      case 'first':\r\n        this.firstPlayer.addScore(1);\r\n        this._setMessage('The first player won', 'over');\r\n        break;\r\n      case 'second':\r\n        this.secondPlayer.addScore(1);\r\n        this._setMessage('The second player won', 'over');\r\n        break;\r\n      case 'draw':\r\n        this._setMessage('The game is draw', 'over');\r\n        break;\r\n      default:\r\n        this._setMessage('Unrecorded situation', 'error');\r\n    }\r\n  }\r\n\r\n  private _drawCross(x: number, y: number): void {\r\n    this.context.beginPath();\r\n    this.context.strokeStyle = '#6B5B95';\r\n    const step = this.cell.size / 3;\r\n    this.context.moveTo(x - step, y - step);\r\n    this.context.lineTo(x + step, y + step);\r\n    this.context.moveTo(x + step, y - step);\r\n    this.context.lineTo(x - step, y + step);\r\n    this.context.stroke();\r\n    this.context.closePath();\r\n  }\r\n\r\n  private _drawCircle(x: number, y: number): void {\r\n    this.context.beginPath();\r\n    this.context.strokeStyle = '#FF6F61';\r\n    const radius = this.cell.size / 3;\r\n    this.context.arc(x, y, radius, 0, 2 * Math.PI);\r\n    this.context.stroke();\r\n    this.context.closePath();\r\n  }\r\n\r\n  private _setCurrentPlayer(player: Players): void {\r\n    this.currentPlayer = player;\r\n  }\r\n\r\n  private _move(event: any): void {\r\n    const rect = event.target.getBoundingClientRect();\r\n    const x = event.clientX - rect.left;\r\n    const y = event.clientY - rect.top;\r\n    const indexCellX = Utilities.div(x, this.cell.size);\r\n    const indexCellY = Utilities.div(y, this.cell.size);\r\n\r\n    if (this.grid[indexCellY][indexCellX] !== 0) {\r\n      return;\r\n    }\r\n\r\n    const posXSymbol = indexCellX * this.cell.size + this.cell.size / 2;\r\n    const posYSymbol = indexCellY * this.cell.size + this.cell.size / 2;\r\n\r\n    if (this.currentPlayer === Players.FIRST) {\r\n      this._drawCircle(posXSymbol, posYSymbol);\r\n      this._setCurrentPlayer(Players.SECOND);\r\n      this.grid[indexCellY][indexCellX] = 1;\r\n    } else {\r\n      this._drawCross(posXSymbol, posYSymbol);\r\n      this._setCurrentPlayer(Players.FIRST);\r\n      this.grid[indexCellY][indexCellX] = -1;\r\n    }\r\n\r\n    this._checkState();\r\n  }\r\n}\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TicTacToeGame.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TicTacToeGame.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./TicTacToeGame.vue?vue&type=template&id=3fbf1281&\"\nimport script from \"./TicTacToeGame.vue?vue&type=script&lang=ts&\"\nexport * from \"./TicTacToeGame.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default class Score {\r\n  private previousScore: number;\r\n  private score: number;\r\n  private best: number;\r\n\r\n  constructor() {\r\n    this.previousScore = 0;\r\n    this.score = 0;\r\n    this.best = 0;\r\n  }\r\n\r\n  public increase(score: number): void {\r\n    score = Math.abs(score);\r\n    this.score += score;\r\n    this._updatePreviousScore();\r\n    this._updateBest();\r\n  }\r\n\r\n  public decrease(score: number): void {\r\n    if (score < 0) {\r\n      score = Math.abs(score);\r\n    }\r\n    if (this.score - score < 0) {\r\n      return;\r\n    }\r\n    this.score -= score;\r\n    this._updatePreviousScore();\r\n  }\r\n\r\n  public reset(): void {\r\n    this.score = 0;\r\n  }\r\n\r\n  get getScore(): number {\r\n    return this.score;\r\n  }\r\n\r\n  get getPreviousScore(): number {\r\n    return this.previousScore;\r\n  }\r\n\r\n  get getBest(): number {\r\n    return this.best;\r\n  }\r\n\r\n  private _updatePreviousScore(): void {\r\n    this.previousScore = this.score;\r\n  }\r\n\r\n  private _updateBest(): void {\r\n    if (this.score > this.best) {\r\n      this.best = this.score;\r\n    }\r\n  }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"scores\"},_vm._l((_vm.scores),function(score,index){return _c('p',{key:index,staticClass:\"scores__p\",class:_vm.colors[index]},[_vm._v(\"\\n    \"+_vm._s(score.message)+\" - \"+_vm._s(score.value)+\"\\n  \")])}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\n@Component\r\nexport default class Scores extends Vue {\r\n  private readonly colors: string[] = [\r\n    'scores--color-scarlet',\r\n    'scores--color-turquoise',\r\n    'scores--color-light-blue',\r\n  ];\r\n  @Prop({ default: [] }) private readonly scores!: object[];\r\n}\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./scores.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./scores.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./scores.vue?vue&type=template&id=27773067&\"\nimport script from \"./scores.vue?vue&type=script&lang=ts&\"\nexport * from \"./scores.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}