{"version":3,"sources":["webpack:///./src/components/game-objects/Board.ts","webpack:///./src/components/utilities.ts","webpack:///./src/components/message.vue?d478","webpack:///./src/components/message.vue?e9d9","webpack:///./src/components/message.vue?03fc","webpack:///./src/components/message.vue","webpack:///./src/components/enums.ts","webpack:///./src/views/TetrisGame.vue?11cb","webpack:///./src/components/game-objects/TetrisPieces.ts","webpack:///./src/views/TetrisGame.vue?12bd","webpack:///./src/views/TetrisGame.vue?5d10","webpack:///./src/views/TetrisGame.vue","webpack:///./src/components/general-objects/Canvas.ts","webpack:///./src/components/mixins/Game.ts","webpack:///./src/components/game-objects/Player.ts","webpack:///./src/components/game-objects/Score.ts","webpack:///./src/components/scores.vue?b734","webpack:///./src/components/scores.vue?e458","webpack:///./src/components/scores.vue?6e91","webpack:///./src/components/scores.vue"],"names":["Board","context","width","height","this","fillStyle","fillRect","Utilities","numerator","denominator","min","max","Math","floor","random","x1","x2","y1","y2","sqrt","pow","matrix","push","Array","fill","event","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","url","Promise","resolve","reject","image","Image","onload","onerror","src","loadImage","then","drawImage","catch","error","console","circle","getRadius","getWidth","getHeight","firstRect","secondRect","derivedCtor","baseCtors","forEach","baseCtor","Object","getOwnPropertyNames","prototype","name","render","_vm","_h","$createElement","_c","_self","staticClass","class","styleState","_v","_s","message","staticRenderFns","style","state","component","Directions","State","Control","BoardPong","BoardTanks","BoardArkanoid","BoardSnake","BoardTicTacToe","BoardTetris","Players","VelocityPaddle","attrs","getScores","ref","getMessage","getStyleOfMessage","_e","on","$event","restart","pieceT","pieceO","pieceL","pieceJ","pieceI","pieceS","pieceZ","colors","createPiece","type","drawPiece","offset","row","value","Game","super","loop","arena","currentPiece","lastTime","dropCounter","dropInterval","currentPiecePosX","currentPiecePosY","scaleContextValue","SCALE_COEFFICIENT","scores","player","Player","_initInstance","start","time","board","draw","deltaTime","_dropCurrentPiece","isOver","requestAnimationFrame","update","cancelAnimationFrame","globalState","OVER","canvas","removeEventListener","keyListener","_reset","run","previousScore","currentScore","bestScore","lives","getPreviousScore","getScore","getBest","getLives","clearContext","scoreToZero","subtractLive","stop","_setMessage","isInitCanvas","_initCanvas","WIDTH","HEIGHT","scale","_handleKey","addEventListener","PLAY","createMatrix","_generatePiece","pieces","length","_checkCollision","_over","_mergePieceWithArena","_clearRows","other","splice","unshift","addScore","piece","direction","piecePosX","_rotatePiece","reverse","keyCode","RESTART","LEFT","_moveCurrentPiece","RIGHT","DOWN","Q","_rotateCurrentPiece","W","components","Scores","Message","Canvas","ctx","getContext","setAttribute","focus","callback","START","styleOfMessage","$refs","game","save","setTransform","clearRect","restore","score","abs","increase","decrease","reset","Score","best","_updatePreviousScore","_updateBest","_l","index","key","default"],"mappings":"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","file":"js/chunk-40a08c3e.972ba527.js","sourcesContent":["import { IDrawable } from '../interfaces';\r\n\r\nexport default class Board implements IDrawable {\r\n  private context: any;\r\n  private width: number = 0;\r\n  private height: number = 0;\r\n\r\n  constructor(context: any, width: number, height: number) {\r\n    this.context = context;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  public draw(): void {\r\n    this.context.fillStyle = '#ffffff';\r\n    this.context.fillRect(0, 0, this.width, this.height);\r\n  }\r\n}\r\n","import Rect from './general-objects/Rect';\r\nimport Circle from './general-objects/Circle';\r\nimport Canvas from './general-objects/Canvas';\r\nimport { IRect, IMouseCoordinates } from './interfaces';\r\n\r\nexport default class Utilities {\r\n  public static div(numerator: number, denominator: number): number {\r\n    return (numerator - numerator % denominator) / denominator;\r\n  }\r\n\r\n  public static randomIntByInterval(min: number, max: number): number {\r\n    return Math.floor(min + Math.random() * (max + 1 - min));\r\n  }\r\n\r\n  public static getDistance(x1: number, x2: number, y1: number, y2: number): number {\r\n    return Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2));\r\n  }\r\n\r\n  public static createMatrix(width: number, height: number): number[][] {\r\n    const matrix: number[][] = [];\r\n    while (height--) {\r\n      matrix.push(new Array(width).fill(0));\r\n    }\r\n    return matrix;\r\n  }\r\n\r\n  public static getMouseCoordinates(event: any): IMouseCoordinates {\r\n    const rect = event.target && event.target.getBoundingClientRect();\r\n    const x: number = event.clientX - rect.left;\r\n    const y: number = event.clientY - rect.top;\r\n    return {x, y};\r\n  }\r\n\r\n  public static loadImage(url: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      const image = new Image();\r\n      image.onload = () => {\r\n        resolve(image);\r\n      };\r\n      image.onerror = reject;\r\n      image.src = url;\r\n    });\r\n  }\r\n\r\n  public static drawImageOnCanvas(context: any, x: number, y: number, width: number, height: number): void {\r\n    this.loadImage('./tank.png')\r\n    .then((image: any) => {\r\n      context.drawImage(image, x, y, width, height);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error: in the method drawImageOnCanvas loading went wrong', error);\r\n    });\r\n  }\r\n\r\n  public static checkCollisionRectOfCircle(rect: Rect, circle: Circle): boolean {\r\n    if ((rect.x < circle.x + circle.getRadius) &&\r\n        (rect.x + rect.getWidth > circle.x - circle.getRadius) &&\r\n        (rect.y < circle.y + circle.getRadius) &&\r\n        (rect.y + rect.getHeight > circle.y - circle.getRadius)) {\r\n          return true;\r\n        }\r\n    return false;\r\n  }\r\n\r\n  public static checkCollisionRectOfRect(firstRect: IRect, secondRect: IRect): boolean {\r\n    if ((firstRect.x < secondRect.x + secondRect.getWidth) &&\r\n        (firstRect.x + firstRect.getWidth > secondRect.x) &&\r\n        (firstRect.y < secondRect.y + secondRect.getHeight) &&\r\n        (firstRect.y + firstRect.getHeight > secondRect.y)) {\r\n          return true;\r\n        }\r\n    return false;\r\n  }\r\n\r\n  public static applyMixins(derivedCtor: any, baseCtors: any[]) {\r\n    baseCtors.forEach((baseCtor) => {\r\n      Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\r\n        derivedCtor.prototype[name] = baseCtor.prototype[name];\r\n      });\r\n    });\r\n  }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"message\"},[_c('p',{class:['message__p', _vm.styleState]},[_vm._v(_vm._s(_vm.message))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\n@Component\r\nexport default class Message extends Vue {\r\n  @Prop() private message!: string;\r\n  @Prop() private state?: string;\r\n\r\n  get styleState(): string {\r\n    let style = 'message--primary';\r\n    if (this.state) {\r\n      if (this.state === 'error') {\r\n        style = 'message--error';\r\n      }\r\n      if (this.state === 'over') {\r\n        style = 'message--over';\r\n      }\r\n    }\r\n    return style;\r\n  }\r\n}\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./message.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./message.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./message.vue?vue&type=template&id=45fd6734&\"\nimport script from \"./message.vue?vue&type=script&lang=ts&\"\nexport * from \"./message.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export const enum Directions {\r\n  LEFT = 37,\r\n  RIGHT = 39,\r\n  UP = 38,\r\n  DOWN = 40,\r\n}\r\n\r\nexport const enum State {\r\n  START,\r\n  PLAY,\r\n  OVER,\r\n}\r\n\r\nexport const enum Control {\r\n  RESTART = 82,\r\n  Q = 81,\r\n  W = 87,\r\n  SPACE = 32,\r\n}\r\n\r\nexport const enum BoardPong {\r\n  WIDTH = 800,\r\n  HEIGHT = 400,\r\n}\r\n\r\nexport const enum BoardTanks {\r\n  WIDTH = 640,\r\n  HEIGHT = 640,\r\n  SCALE_COEFFICIENT = 20,\r\n}\r\n\r\nexport const enum BoardArkanoid {\r\n  WIDTH = 800,\r\n  HEIGHT = 720,\r\n}\r\n\r\nexport const enum BoardSnake {\r\n  WIDTH = 800,\r\n  HEIGHT = 600,\r\n}\r\n\r\nexport const enum BoardTicTacToe {\r\n  WIDTH = 450,\r\n  HEIGHT = 450,\r\n}\r\n\r\nexport const enum BoardTetris {\r\n  WIDTH = 320,\r\n  HEIGHT = 540,\r\n  SCALE_COEFFICIENT = 20,\r\n}\r\n\r\nexport const enum Players {\r\n  FIRST,\r\n  SECOND,\r\n  AI,\r\n}\r\n\r\nexport const enum VelocityPaddle {\r\n  SLOW = 8,\r\n  MIDDLE = 14,\r\n  FAST = 20,\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tetris\"},[_c('Scores',{attrs:{\"scores\":_vm.getScores}}),_c('canvas',{ref:\"game\"}),(_vm.isMessage)?_c('Message',{attrs:{\"message\":_vm.getMessage,\"state\":_vm.getStyleOfMessage}}):_vm._e(),_c('button',{staticClass:\"btn-outline btn-outline--restart\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.restart()}}},[_vm._v(\"Restart\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const pieceT: number[][] = [\r\n  [0, 0, 0],\r\n  [1, 1, 1],\r\n  [0, 1, 0],\r\n];\r\n\r\nconst pieceO: number[][] = [\r\n  [2, 2],\r\n  [2, 2],\r\n];\r\n\r\nconst pieceL: number[][] = [\r\n  [0, 3, 0],\r\n  [0, 3, 0],\r\n  [0, 3, 3],\r\n];\r\n\r\nconst pieceJ: number[][] = [\r\n  [0, 4, 0],\r\n  [0, 4, 0],\r\n  [4, 4, 0],\r\n];\r\n\r\nconst pieceI: number[][] = [\r\n  [0, 5, 0, 0],\r\n  [0, 5, 0, 0],\r\n  [0, 5, 0, 0],\r\n  [0, 5, 0, 0],\r\n];\r\n\r\nconst pieceS: number[][] = [\r\n  [0, 6, 6],\r\n  [6, 6, 0],\r\n  [0, 0, 0],\r\n];\r\n\r\nconst pieceZ: number[][] = [\r\n  [7, 7, 0],\r\n  [0, 7, 7],\r\n  [0, 0, 0],\r\n];\r\n\r\nconst colors: any[] = [\r\n  null,\r\n  '#9c27b0',\r\n  '#ffeb3b',\r\n  '#ff9800',\r\n  '#2196f3',\r\n  '#00bcd4',\r\n  '#4caf50',\r\n  '#f44336',\r\n];\r\n\r\nexport function createPiece(type: string): any {\r\n  switch (type) {\r\n    case 'T':\r\n      return pieceT;\r\n    case 'O':\r\n      return pieceO;\r\n    case 'L':\r\n      return pieceL;\r\n    case 'I':\r\n      return pieceI;\r\n    case 'J':\r\n      return pieceJ;\r\n    case 'S':\r\n      return pieceS;\r\n    case 'Z':\r\n      return pieceZ;\r\n  }\r\n}\r\n\r\nexport function drawPiece(context: any, matrix: number[][], offset: any): void {\r\n  matrix.forEach((row, y) => {\r\n    row.forEach((value, x) => {\r\n      if (value !== 0) {\r\n        context.fillStyle = colors[value];\r\n        context.fillRect(x + offset.x, y + offset.y, 1, 1);\r\n      }\r\n    });\r\n  });\r\n}\r\n","\n\n\n\n\n\n\n\n\n\r\nimport Component, { mixins } from 'vue-class-component';\r\nimport { IDynamicGame } from '@/components/interfaces';\r\nimport Utilities from '@/components/utilities';\r\nimport { Directions, State, Control, BoardTetris } from '@/components/enums';\r\nimport Player from '@/components/game-objects/Player';\r\nimport Board from '@/components/game-objects/Board';\r\nimport Game from '@/components/mixins/Game';\r\nimport { createPiece, drawPiece } from '@/components/game-objects/TetrisPieces';\r\nimport Message from '@/components/message.vue';\r\nimport Scores from '@/components/scores.vue';\r\n\r\n@Component({\r\n  components: {\r\n    Scores,\r\n    Message,\r\n  },\r\n})\r\nexport default class TetrisGame extends mixins(Game) implements IDynamicGame {\r\n  private player: Player;\r\n  private loop: number = 0;\r\n  private keyListener: any;\r\n  private arena: number[][] = [];\r\n  private currentPiece: number[][] = [];\r\n  private lastTime: number = 0;\r\n  private dropCounter: number = 0;\r\n  private dropInterval: number = 1000;\r\n  private currentPiecePosX: number = 0;\r\n  private currentPiecePosY: number = 0;\r\n  private scaleContextValue: number = BoardTetris.SCALE_COEFFICIENT;\r\n  private scores: object[] = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.player = new Player();\r\n  }\r\n\r\n  public run(): void {\r\n    if (this._initInstance() === false) {\r\n      return;\r\n    }\r\n    this.start();\r\n  }\r\n\r\n  public update(time = 0): void {\r\n    this.board.draw();\r\n    drawPiece(this.context, this.arena, {x: 0, y: 0});\r\n    drawPiece(this.context, this.currentPiece, {x: this.currentPiecePosX, y: this.currentPiecePosY});\r\n    const deltaTime = time - this.lastTime;\r\n    this.lastTime = time;\r\n    this.dropCounter += deltaTime;\r\n    if (this.dropCounter > this.dropInterval) {\r\n      this._dropCurrentPiece();\r\n    }\r\n    if (!this.isOver) {\r\n      this.loop = requestAnimationFrame(this.update);\r\n    }\r\n  }\r\n\r\n  public start(): void {\r\n    this.update();\r\n  }\r\n\r\n  public stop(): void {\r\n    if (this.loop) {\r\n      cancelAnimationFrame(this.loop);\r\n      this.globalState = State.OVER;\r\n      this.canvas.removeEventListener('keydown', this.keyListener);\r\n    }\r\n  }\r\n\r\n  public restart(): void {\r\n    this._reset();\r\n  }\r\n\r\n  public mounted() {\r\n    this.run();\r\n  }\r\n\r\n  get getScores(): object[] {\r\n    this.scores = [\r\n      {\r\n        message: 'Previous score',\r\n        value: this.previousScore,\r\n      },\r\n      {\r\n        message: 'Current score',\r\n        value: this.currentScore,\r\n      },\r\n      {\r\n        message: 'Best result',\r\n        value: this.bestScore,\r\n      },\r\n      {\r\n        message: 'Lives',\r\n        value: this.lives,\r\n      },\r\n    ];\r\n    return this.scores;\r\n  }\r\n\r\n  get previousScore(): number {\r\n    return this.player.getPreviousScore;\r\n  }\r\n\r\n  get currentScore(): number {\r\n    return this.player.getScore;\r\n  }\r\n\r\n  get bestScore(): number {\r\n    return this.player.getBest;\r\n  }\r\n\r\n  get lives(): number {\r\n    return this.player.getLives;\r\n  }\r\n\r\n  private _reset(): void {\r\n    this.clearContext();\r\n    this.currentPiecePosY = 0;\r\n    this.board.draw();\r\n    this.arena.forEach((row) => row.fill(0));\r\n    drawPiece(this.context, this.arena, {x: 0, y: 0});\r\n    this.player.scoreToZero();\r\n  }\r\n\r\n  private _over(): void {\r\n    this.player.subtractLive(1);\r\n    this._reset();\r\n    if (this.player.getLives <= 0) {\r\n      this.stop();\r\n      this._setMessage('The game is over', 'over');\r\n    }\r\n  }\r\n\r\n  private _initInstance(): boolean {\r\n    if (this.isInitCanvas === false) {\r\n      if (this._initCanvas(BoardTetris.WIDTH, BoardTetris.HEIGHT) === false) {\r\n        return false;\r\n      }\r\n      this.context.scale(this.scaleContextValue, this.scaleContextValue);\r\n    }\r\n\r\n    this.keyListener = (event: any) => {\r\n      this._handleKey(event);\r\n    };\r\n    this.canvas.addEventListener('keydown', this.keyListener);\r\n    this.globalState = State.PLAY;\r\n    this.board = new Board(this.context, this.width, this.height);\r\n    this.arena = Utilities.createMatrix(this.width / this.scaleContextValue, this.height / this.scaleContextValue);\r\n    this._generatePiece();\r\n\r\n    return true;\r\n  }\r\n\r\n  private _generatePiece(): void {\r\n    const pieces: string = 'ILJOTSZ';\r\n    this.currentPiece = createPiece(pieces[pieces.length * Math.random() | 0]);\r\n    this.currentPiecePosY = 0;\r\n    this.currentPiecePosX = (this.arena[0].length / 2 | 0) - (this.currentPiece[0].length / 2 | 0);\r\n    if (this._checkCollision()) {\r\n      this._over();\r\n    }\r\n  }\r\n\r\n  private _dropCurrentPiece(): void {\r\n    this.currentPiecePosY++;\r\n    if (this._checkCollision()) {\r\n      this.currentPiecePosY--;\r\n      this._mergePieceWithArena();\r\n      this._generatePiece();\r\n      this._clearRows();\r\n    }\r\n    this.dropCounter = 0;\r\n  }\r\n\r\n  private _clearRows(): void {\r\n    other: for (let y = this.arena.length - 1; y > 0; y--) {\r\n      for (const x of this.arena[y]) {\r\n        if (x === 0) {\r\n          continue other;\r\n        }\r\n      }\r\n      const row = this.arena.splice(y, 1)[0].fill(0);\r\n      this.arena.unshift(row);\r\n      y++;\r\n      this.player.addScore(1);\r\n    }\r\n  }\r\n\r\n  private _checkCollision(): boolean {\r\n    const arena = this.arena;\r\n    const piece = this.currentPiece;\r\n    for (let y = 0; y < piece.length; y++) {\r\n      for (let x = 0; x < piece[y].length; x++) {\r\n        if (piece[y][x] !== 0 &&\r\n            (arena[y + this.currentPiecePosY] &&\r\n            arena[y + this.currentPiecePosY][x + this.currentPiecePosX]) !== 0) {\r\n              return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _mergePieceWithArena(): void {\r\n    this.currentPiece.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value !== 0) {\r\n          this.arena[y + this.currentPiecePosY][x + this.currentPiecePosX] = value;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private _moveCurrentPiece(direction: number): void {\r\n    this.currentPiecePosX += direction;\r\n    if (this._checkCollision()) {\r\n      this.currentPiecePosX -= direction;\r\n    }\r\n  }\r\n\r\n  private _rotateCurrentPiece(direction: number): void {\r\n    let offset = 1;\r\n    const piecePosX = this.currentPiecePosX;\r\n    this._rotatePiece(direction);\r\n\r\n    while (this._checkCollision()) {\r\n      this.currentPiecePosX += offset;\r\n      offset = -(offset + (offset > 0 ? 1 : -1));\r\n\r\n      if (offset > this.currentPiece[0].length) {\r\n        this._rotatePiece(-direction);\r\n        this.currentPiecePosX = piecePosX;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _rotatePiece(direction: number): void {\r\n    const piece = this.currentPiece;\r\n\r\n    for (let y = 0; y < piece.length; y++) {\r\n      for (let x = 0; x < y; x++) {\r\n        [piece[y][x], piece[x][y]] = [piece[x][y], piece[y][x]];\r\n      }\r\n    }\r\n\r\n    if (direction > 0) {\r\n      piece.forEach((row) => row.reverse());\r\n    } else {\r\n      piece.reverse();\r\n    }\r\n  }\r\n\r\n  private _handleKey(event: any): void {\r\n    if (event.keyCode === Control.RESTART) {\r\n      this.globalState = State.OVER;\r\n      this.restart();\r\n    }\r\n    if (event.keyCode === Directions.LEFT) {\r\n      this._moveCurrentPiece(-1);\r\n    }\r\n    if (event.keyCode === Directions.RIGHT) {\r\n      this._moveCurrentPiece(1);\r\n    }\r\n    if (event.keyCode === Directions.DOWN) {\r\n      this._dropCurrentPiece();\r\n    }\r\n    if (event.keyCode === Control.Q) {\r\n      this._rotateCurrentPiece(1);\r\n    }\r\n    if (event.keyCode === Control.W) {\r\n      this._rotateCurrentPiece(-1);\r\n    }\r\n  }\r\n}\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TetrisGame.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TetrisGame.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./TetrisGame.vue?vue&type=template&id=41c90c8a&\"\nimport script from \"./TetrisGame.vue?vue&type=script&lang=ts&\"\nexport * from \"./TetrisGame.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default class Canvas {\r\n  private canvas: any;\r\n  private ctx: any;\r\n\r\n  constructor(canvas: any, width: number, height: number) {\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.canvas.width = width;\r\n    this.canvas.height = height;\r\n    this.canvas.setAttribute('tabindex', '1');\r\n    this.canvas.focus();\r\n  }\r\n\r\n  public addEventListener(event: string, callback: any): void {\r\n    this.canvas.addEventListener(event, callback);\r\n  }\r\n\r\n  public removeEventListener(event: string, callback: any): void {\r\n    this.canvas.removeEventListener(event, callback);\r\n  }\r\n\r\n  get context(): any {\r\n    return this.ctx;\r\n  }\r\n}\r\n","import { Vue, Component } from 'vue-property-decorator';\r\nimport { State } from '../enums';\r\nimport Canvas from '../general-objects/Canvas';\r\n\r\n@Component\r\nexport default class Game extends Vue {\r\n  protected canvas: any = null;\r\n  protected context: any;\r\n  protected width = 0;\r\n  protected height = 0;\r\n  protected globalState: State = State.START;\r\n  protected isInitCanvas = false;\r\n  protected board: any;\r\n  protected message: string = '';\r\n  protected styleOfMessage: string = '';\r\n\r\n  protected _initCanvas(width: number, height: number): boolean {\r\n    if (!this.$refs.game) {\r\n      return false;\r\n    }\r\n    this.width = width;\r\n    this.height = height;\r\n    this.canvas = new Canvas(this.$refs.game, width, height);\r\n    this.context = this.canvas.context;\r\n    this.isInitCanvas = true;\r\n    return true;\r\n  }\r\n\r\n  protected clearContext(): void {\r\n    if (this.isInitCanvas) {\r\n      this.context.save();\r\n      this.context.setTransform(1, 0, 0, 1, 0, 0);\r\n      this.context.clearRect(0, 0, this.width, this.height);\r\n      this.context.restore();\r\n    }\r\n  }\r\n\r\n  protected get isOver(): boolean {\r\n    return this.globalState === State.OVER;\r\n  }\r\n\r\n  protected get getMessage(): string {\r\n    return this.message;\r\n  }\r\n\r\n  protected get getStyleOfMessage(): string {\r\n    return this.styleOfMessage;\r\n  }\r\n\r\n  protected get isMessage(): boolean {\r\n    return this.isOver && this.message !== '';\r\n  }\r\n\r\n  protected _resetMessage(): void {\r\n    this.message = '';\r\n    this.styleOfMessage = '';\r\n  }\r\n\r\n  protected _setMessage(message: string, styleOfMessage: string): void {\r\n    this.message = message;\r\n    this.styleOfMessage = styleOfMessage;\r\n  }\r\n}\r\n","import Score from './Score';\r\n\r\nexport default class Player {\r\n  private name: string = '';\r\n  private score: Score;\r\n  private lives: number = 0;\r\n\r\n  constructor(name: string = 'default name', lives: number = 3) {\r\n    this.score = new Score();\r\n    this.name = name;\r\n    this.lives = lives;\r\n  }\r\n\r\n  public addLive(lives: number): void {\r\n    this.lives += lives;\r\n  }\r\n\r\n  public subtractLive(lives: number): void {\r\n    if (lives < 0) {\r\n      lives = Math.abs(lives);\r\n    }\r\n    if (this.lives - lives < 0) {\r\n      return;\r\n    }\r\n    this.lives -= lives;\r\n  }\r\n\r\n  public addScore(score: number): void {\r\n    this.score.increase(score);\r\n  }\r\n\r\n  public subtractScore(score: number): void {\r\n    this.score.decrease(score);\r\n  }\r\n\r\n  public scoreToZero(): void {\r\n    this.score.reset();\r\n  }\r\n\r\n  get getLives(): number {\r\n    return this.lives;\r\n  }\r\n\r\n  get getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  get getScore(): number {\r\n    return this.score.getScore;\r\n  }\r\n\r\n  get getPreviousScore(): number {\r\n    return this.score.getPreviousScore;\r\n  }\r\n\r\n  get getBest(): number {\r\n    return this.score.getBest;\r\n  }\r\n}\r\n","export default class Score {\r\n  private previousScore: number;\r\n  private score: number;\r\n  private best: number;\r\n\r\n  constructor() {\r\n    this.previousScore = 0;\r\n    this.score = 0;\r\n    this.best = 0;\r\n  }\r\n\r\n  public increase(score: number): void {\r\n    score = Math.abs(score);\r\n    this.score += score;\r\n    this._updatePreviousScore();\r\n    this._updateBest();\r\n  }\r\n\r\n  public decrease(score: number): void {\r\n    if (score < 0) {\r\n      score = Math.abs(score);\r\n    }\r\n    if (this.score - score < 0) {\r\n      return;\r\n    }\r\n    this.score -= score;\r\n    this._updatePreviousScore();\r\n  }\r\n\r\n  public reset(): void {\r\n    this.score = 0;\r\n  }\r\n\r\n  get getScore(): number {\r\n    return this.score;\r\n  }\r\n\r\n  get getPreviousScore(): number {\r\n    return this.previousScore;\r\n  }\r\n\r\n  get getBest(): number {\r\n    return this.best;\r\n  }\r\n\r\n  private _updatePreviousScore(): void {\r\n    this.previousScore = this.score;\r\n  }\r\n\r\n  private _updateBest(): void {\r\n    if (this.score > this.best) {\r\n      this.best = this.score;\r\n    }\r\n  }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"scores\"},_vm._l((_vm.scores),function(score,index){return _c('p',{key:index,staticClass:\"scores__p\",class:_vm.colors[index]},[_vm._v(\"\\n    \"+_vm._s(score.message)+\" - \"+_vm._s(score.value)+\"\\n  \")])}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\n@Component\r\nexport default class Scores extends Vue {\r\n  private readonly colors: string[] = [\r\n    'scores--color-scarlet',\r\n    'scores--color-turquoise',\r\n    'scores--color-light-blue',\r\n  ];\r\n  @Prop({ default: [] }) private readonly scores!: object[];\r\n}\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./scores.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./scores.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./scores.vue?vue&type=template&id=27773067&\"\nimport script from \"./scores.vue?vue&type=script&lang=ts&\"\nexport * from \"./scores.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}