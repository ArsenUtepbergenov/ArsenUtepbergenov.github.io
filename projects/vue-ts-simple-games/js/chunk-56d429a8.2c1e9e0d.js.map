{"version":3,"sources":["webpack:///./src/components/game-objects/Board.ts","webpack:///./src/components/utilities.ts","webpack:///./src/views/TanksGame.vue?09bf","webpack:///./src/components/game-objects/SpriteTank.ts","webpack:///./src/views/TanksGame.vue?88ea","webpack:///./src/views/TanksGame.vue?1e6c","webpack:///./src/views/TanksGame.vue","webpack:///./src/components/enums.ts","webpack:///./src/components/general-objects/Canvas.ts","webpack:///./src/components/mixins/Game.ts","webpack:///./src/components/game-objects/Player.ts","webpack:///./src/components/game-objects/Score.ts","webpack:///./src/components/scores.vue?b734","webpack:///./src/components/scores.vue?e458","webpack:///./src/components/scores.vue?6e91","webpack:///./src/components/scores.vue"],"names":["Board","context","width","height","this","fillStyle","fillRect","Utilities","numerator","denominator","min","max","Math","floor","random","x1","x2","y1","y2","sqrt","pow","matrix","push","Array","fill","event","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","url","Promise","resolve","reject","image","Image","onload","onerror","src","loadImage","then","drawImage","catch","error","console","circle","getRadius","getWidth","getHeight","firstRect","secondRect","derivedCtor","baseCtors","forEach","baseCtor","Object","getOwnPropertyNames","prototype","name","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","getScores","ref","on","$event","restart","_v","staticRenderFns","drawImageOnCanvas","Game","super","scores","loop","player","Player","update","isOver","requestAnimationFrame","start","cancelAnimationFrame","globalState","OVER","canvas","removeEventListener","mousemoveListener","_initInstance","_checkState","_reset","run","message","value","previousScore","currentScore","bestScore","getPreviousScore","getScore","getBest","clearContext","stop","isInitCanvas","_initCanvas","WIDTH","HEIGHT","_handleMouseMove","addEventListener","PLAY","board","tank","draw","getMouseCoordinates","components","Scores","component","Directions","State","Control","BoardPong","BoardTanks","BoardArkanoid","BoardSnake","BoardTicTacToe","BoardTetris","Players","VelocityPaddle","Canvas","ctx","getContext","setAttribute","focus","callback","START","styleOfMessage","$refs","game","save","setTransform","clearRect","restore","lives","score","abs","increase","decrease","reset","Score","best","_updatePreviousScore","_updateBest","_l","index","key","class","colors","_s","default"],"mappings":"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","file":"js/chunk-56d429a8.2c1e9e0d.js","sourcesContent":["import { IDrawable } from '../interfaces';\r\n\r\nexport default class Board implements IDrawable {\r\n  private context: any;\r\n  private width: number = 0;\r\n  private height: number = 0;\r\n\r\n  constructor(context: any, width: number, height: number) {\r\n    this.context = context;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  public draw(): void {\r\n    this.context.fillStyle = '#ffffff';\r\n    this.context.fillRect(0, 0, this.width, this.height);\r\n  }\r\n}\r\n","import Rect from './general-objects/Rect';\r\nimport Circle from './general-objects/Circle';\r\nimport Canvas from './general-objects/Canvas';\r\nimport { IRect, IMouseCoordinates } from './interfaces';\r\n\r\nexport default class Utilities {\r\n  public static div(numerator: number, denominator: number): number {\r\n    return (numerator - numerator % denominator) / denominator;\r\n  }\r\n\r\n  public static randomIntByInterval(min: number, max: number): number {\r\n    return Math.floor(min + Math.random() * (max + 1 - min));\r\n  }\r\n\r\n  public static getDistance(x1: number, x2: number, y1: number, y2: number): number {\r\n    return Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2));\r\n  }\r\n\r\n  public static createMatrix(width: number, height: number): number[][] {\r\n    const matrix: number[][] = [];\r\n    while (height--) {\r\n      matrix.push(new Array(width).fill(0));\r\n    }\r\n    return matrix;\r\n  }\r\n\r\n  public static getMouseCoordinates(event: any): IMouseCoordinates {\r\n    const rect = event.target && event.target.getBoundingClientRect();\r\n    const x: number = event.clientX - rect.left;\r\n    const y: number = event.clientY - rect.top;\r\n    return {x, y};\r\n  }\r\n\r\n  public static loadImage(url: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      const image = new Image();\r\n      image.onload = () => {\r\n        resolve(image);\r\n      };\r\n      image.onerror = reject;\r\n      image.src = url;\r\n    });\r\n  }\r\n\r\n  public static drawImageOnCanvas(context: any, x: number, y: number, width: number, height: number): void {\r\n    this.loadImage('./tank.png')\r\n    .then((image: any) => {\r\n      context.drawImage(image, x, y, width, height);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error: in the method drawImageOnCanvas loading went wrong', error);\r\n    });\r\n  }\r\n\r\n  public static checkCollisionRectOfCircle(rect: Rect, circle: Circle): boolean {\r\n    if ((rect.x < circle.x + circle.getRadius) &&\r\n        (rect.x + rect.getWidth > circle.x - circle.getRadius) &&\r\n        (rect.y < circle.y + circle.getRadius) &&\r\n        (rect.y + rect.getHeight > circle.y - circle.getRadius)) {\r\n          return true;\r\n        }\r\n    return false;\r\n  }\r\n\r\n  public static checkCollisionRectOfRect(firstRect: IRect, secondRect: IRect): boolean {\r\n    if ((firstRect.x < secondRect.x + secondRect.getWidth) &&\r\n        (firstRect.x + firstRect.getWidth > secondRect.x) &&\r\n        (firstRect.y < secondRect.y + secondRect.getHeight) &&\r\n        (firstRect.y + firstRect.getHeight > secondRect.y)) {\r\n          return true;\r\n        }\r\n    return false;\r\n  }\r\n\r\n  public static applyMixins(derivedCtor: any, baseCtors: any[]) {\r\n    baseCtors.forEach((baseCtor) => {\r\n      Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\r\n        derivedCtor.prototype[name] = baseCtor.prototype[name];\r\n      });\r\n    });\r\n  }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tanks\"},[_c('Scores',{attrs:{\"scores\":_vm.getScores}}),_c('canvas',{ref:\"game\"}),_c('button',{staticClass:\"btn-outline btn-outline--restart\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.restart()}}},[_vm._v(\"Restart\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { IDrawable } from '../interfaces';\r\nimport Utilities from '../utilities';\r\n\r\nexport default class SpriteTank implements IDrawable {\r\n  private context: any;\r\n  private image: any;\r\n\r\n  constructor(context: any) {\r\n    this.context = context;\r\n  }\r\n\r\n  public update(): void {\r\n    // this.draw();\r\n  }\r\n\r\n  public draw(): void {\r\n    Utilities.drawImageOnCanvas(this.context, 10, 10, 100, 100);\r\n  }\r\n}\r\n","\n\n\n\n\n\n\n\n\r\nimport Component, { mixins } from 'vue-class-component';\r\nimport { IDynamicGame, IMouseCoordinates } from '@/components/interfaces';\r\nimport { Directions, State, Control, BoardTanks } from '@/components/enums';\r\nimport Board from '@/components/game-objects/Board';\r\nimport Player from '@/components/game-objects/Player';\r\nimport SpriteTank from '@/components/game-objects/SpriteTank';\r\nimport Game from '@/components/mixins/Game';\r\nimport Scores from '@/components/scores.vue';\r\nimport Utilities from '../components/utilities';\r\n\r\n@Component({\r\n  components: {\r\n    Scores,\r\n  },\r\n})\r\nexport default class TanksGame extends mixins(Game) implements IDynamicGame {\r\n  private player: Player;\r\n  private tank: any;\r\n  private scores: object[] = [];\r\n  private loop: number = 0;\r\n  private mousemoveListener: any;\r\n\r\n  constructor() {\r\n    super();\r\n    this.player = new Player();\r\n  }\r\n\r\n  public start(): void {\r\n    this.update();\r\n    if (!this.isOver) {\r\n      this.loop = requestAnimationFrame(this.start);\r\n    }\r\n  }\r\n\r\n  public stop(): void {\r\n    if (this.loop) {\r\n      cancelAnimationFrame(this.loop);\r\n      this.globalState = State.OVER;\r\n      this.canvas.removeEventListener('mousemove', this.mousemoveListener);\r\n    }\r\n  }\r\n\r\n  public run(): void {\r\n    if (this._initInstance() === false) {\r\n      return;\r\n    }\r\n    this.start();\r\n  }\r\n\r\n  public update(): void {\r\n    // this.board.draw();\r\n    // this.tank.update();\r\n    this._checkState();\r\n  }\r\n\r\n  public restart(): void {\r\n    this._reset();\r\n    this.run();\r\n  }\r\n\r\n  public mounted() {\r\n    this.run();\r\n  }\r\n\r\n  get getScores(): object[] {\r\n    this.scores = [\r\n      {\r\n        message: 'Previous score',\r\n        value: this.previousScore,\r\n      },\r\n      {\r\n        message: 'Current score',\r\n        value: this.currentScore,\r\n      },\r\n      {\r\n        message: 'Best result',\r\n        value: this.bestScore,\r\n      },\r\n    ];\r\n    return this.scores;\r\n  }\r\n\r\n  get previousScore(): number {\r\n    return this.player.getPreviousScore;\r\n  }\r\n\r\n  get currentScore(): number {\r\n    return this.player.getScore;\r\n  }\r\n\r\n  get bestScore(): number {\r\n    return this.player.getBest;\r\n  }\r\n\r\n  private _reset(): void {\r\n    this.clearContext();\r\n    this.stop();\r\n  }\r\n\r\n  private _initInstance(): boolean {\r\n    if (this.isInitCanvas === false) {\r\n      if (this._initCanvas(BoardTanks.WIDTH, BoardTanks.HEIGHT) === false) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    this.mousemoveListener = (event: any) => {\r\n      this._handleMouseMove(event);\r\n    };\r\n    this.canvas.addEventListener('mousemove', this.mousemoveListener);\r\n\r\n    this.globalState = State.PLAY;\r\n    this.board = new Board(this.context, this.width, this.height);\r\n    this.tank = new SpriteTank(this.context);\r\n    this.tank.draw();\r\n\r\n    return true;\r\n  }\r\n\r\n  private _checkState(): void {\r\n    //\r\n  }\r\n\r\n  private _handleMouseMove(event: any): void {\r\n    const {x, y}: IMouseCoordinates = Utilities.getMouseCoordinates(event);\r\n    // console.log(x, y);\r\n  }\r\n}\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TanksGame.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TanksGame.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./TanksGame.vue?vue&type=template&id=2349805e&\"\nimport script from \"./TanksGame.vue?vue&type=script&lang=ts&\"\nexport * from \"./TanksGame.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export const enum Directions {\r\n  LEFT = 37,\r\n  RIGHT = 39,\r\n  UP = 38,\r\n  DOWN = 40,\r\n}\r\n\r\nexport const enum State {\r\n  START,\r\n  PLAY,\r\n  OVER,\r\n}\r\n\r\nexport const enum Control {\r\n  RESTART = 82,\r\n  Q = 81,\r\n  W = 87,\r\n  SPACE = 32,\r\n}\r\n\r\nexport const enum BoardPong {\r\n  WIDTH = 800,\r\n  HEIGHT = 400,\r\n}\r\n\r\nexport const enum BoardTanks {\r\n  WIDTH = 640,\r\n  HEIGHT = 640,\r\n  SCALE_COEFFICIENT = 20,\r\n}\r\n\r\nexport const enum BoardArkanoid {\r\n  WIDTH = 800,\r\n  HEIGHT = 720,\r\n}\r\n\r\nexport const enum BoardSnake {\r\n  WIDTH = 800,\r\n  HEIGHT = 600,\r\n}\r\n\r\nexport const enum BoardTicTacToe {\r\n  WIDTH = 450,\r\n  HEIGHT = 450,\r\n}\r\n\r\nexport const enum BoardTetris {\r\n  WIDTH = 320,\r\n  HEIGHT = 540,\r\n  SCALE_COEFFICIENT = 20,\r\n}\r\n\r\nexport const enum Players {\r\n  FIRST,\r\n  SECOND,\r\n  AI,\r\n}\r\n\r\nexport const enum VelocityPaddle {\r\n  SLOW = 8,\r\n  MIDDLE = 14,\r\n  FAST = 20,\r\n}\r\n","export default class Canvas {\r\n  private canvas: any;\r\n  private ctx: any;\r\n\r\n  constructor(canvas: any, width: number, height: number) {\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.canvas.width = width;\r\n    this.canvas.height = height;\r\n    this.canvas.setAttribute('tabindex', '1');\r\n    this.canvas.focus();\r\n  }\r\n\r\n  public addEventListener(event: string, callback: any): void {\r\n    this.canvas.addEventListener(event, callback);\r\n  }\r\n\r\n  public removeEventListener(event: string, callback: any): void {\r\n    this.canvas.removeEventListener(event, callback);\r\n  }\r\n\r\n  get context(): any {\r\n    return this.ctx;\r\n  }\r\n}\r\n","import { Vue, Component } from 'vue-property-decorator';\r\nimport { State } from '../enums';\r\nimport Canvas from '../general-objects/Canvas';\r\n\r\n@Component\r\nexport default class Game extends Vue {\r\n  protected canvas: any = null;\r\n  protected context: any;\r\n  protected width = 0;\r\n  protected height = 0;\r\n  protected globalState: State = State.START;\r\n  protected isInitCanvas = false;\r\n  protected board: any;\r\n  protected message: string = '';\r\n  protected styleOfMessage: string = '';\r\n\r\n  protected _initCanvas(width: number, height: number): boolean {\r\n    if (!this.$refs.game) {\r\n      return false;\r\n    }\r\n    this.width = width;\r\n    this.height = height;\r\n    this.canvas = new Canvas(this.$refs.game, width, height);\r\n    this.context = this.canvas.context;\r\n    this.isInitCanvas = true;\r\n    return true;\r\n  }\r\n\r\n  protected clearContext(): void {\r\n    if (this.isInitCanvas) {\r\n      this.context.save();\r\n      this.context.setTransform(1, 0, 0, 1, 0, 0);\r\n      this.context.clearRect(0, 0, this.width, this.height);\r\n      this.context.restore();\r\n    }\r\n  }\r\n\r\n  protected get isOver(): boolean {\r\n    return this.globalState === State.OVER;\r\n  }\r\n\r\n  protected get getMessage(): string {\r\n    return this.message;\r\n  }\r\n\r\n  protected get getStyleOfMessage(): string {\r\n    return this.styleOfMessage;\r\n  }\r\n\r\n  protected get isMessage(): boolean {\r\n    return this.isOver && this.message !== '';\r\n  }\r\n\r\n  protected _resetMessage(): void {\r\n    this.message = '';\r\n    this.styleOfMessage = '';\r\n  }\r\n\r\n  protected _setMessage(message: string, styleOfMessage: string): void {\r\n    this.message = message;\r\n    this.styleOfMessage = styleOfMessage;\r\n  }\r\n}\r\n","import Score from './Score';\r\n\r\nexport default class Player {\r\n  private name: string = '';\r\n  private score: Score;\r\n  private lives: number = 0;\r\n\r\n  constructor(name: string = 'default name', lives: number = 3) {\r\n    this.score = new Score();\r\n    this.name = name;\r\n    this.lives = lives;\r\n  }\r\n\r\n  public addLive(lives: number): void {\r\n    this.lives += lives;\r\n  }\r\n\r\n  public subtractLive(lives: number): void {\r\n    if (lives < 0) {\r\n      lives = Math.abs(lives);\r\n    }\r\n    if (this.lives - lives < 0) {\r\n      return;\r\n    }\r\n    this.lives -= lives;\r\n  }\r\n\r\n  public addScore(score: number): void {\r\n    this.score.increase(score);\r\n  }\r\n\r\n  public subtractScore(score: number): void {\r\n    this.score.decrease(score);\r\n  }\r\n\r\n  public scoreToZero(): void {\r\n    this.score.reset();\r\n  }\r\n\r\n  get getLives(): number {\r\n    return this.lives;\r\n  }\r\n\r\n  get getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  get getScore(): number {\r\n    return this.score.getScore;\r\n  }\r\n\r\n  get getPreviousScore(): number {\r\n    return this.score.getPreviousScore;\r\n  }\r\n\r\n  get getBest(): number {\r\n    return this.score.getBest;\r\n  }\r\n}\r\n","export default class Score {\r\n  private previousScore: number;\r\n  private score: number;\r\n  private best: number;\r\n\r\n  constructor() {\r\n    this.previousScore = 0;\r\n    this.score = 0;\r\n    this.best = 0;\r\n  }\r\n\r\n  public increase(score: number): void {\r\n    score = Math.abs(score);\r\n    this.score += score;\r\n    this._updatePreviousScore();\r\n    this._updateBest();\r\n  }\r\n\r\n  public decrease(score: number): void {\r\n    if (score < 0) {\r\n      score = Math.abs(score);\r\n    }\r\n    if (this.score - score < 0) {\r\n      return;\r\n    }\r\n    this.score -= score;\r\n    this._updatePreviousScore();\r\n  }\r\n\r\n  public reset(): void {\r\n    this.score = 0;\r\n  }\r\n\r\n  get getScore(): number {\r\n    return this.score;\r\n  }\r\n\r\n  get getPreviousScore(): number {\r\n    return this.previousScore;\r\n  }\r\n\r\n  get getBest(): number {\r\n    return this.best;\r\n  }\r\n\r\n  private _updatePreviousScore(): void {\r\n    this.previousScore = this.score;\r\n  }\r\n\r\n  private _updateBest(): void {\r\n    if (this.score > this.best) {\r\n      this.best = this.score;\r\n    }\r\n  }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"scores\"},_vm._l((_vm.scores),function(score,index){return _c('p',{key:index,staticClass:\"scores__p\",class:_vm.colors[index]},[_vm._v(\"\\n    \"+_vm._s(score.message)+\" - \"+_vm._s(score.value)+\"\\n  \")])}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\n@Component\r\nexport default class Scores extends Vue {\r\n  private readonly colors: string[] = [\r\n    'scores--color-scarlet',\r\n    'scores--color-turquoise',\r\n    'scores--color-light-blue',\r\n  ];\r\n  @Prop({ default: [] }) private readonly scores!: object[];\r\n}\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./scores.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./scores.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./scores.vue?vue&type=template&id=27773067&\"\nimport script from \"./scores.vue?vue&type=script&lang=ts&\"\nexport * from \"./scores.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}